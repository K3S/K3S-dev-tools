<?php
/** @var $title string */
/** @var $sourceMemberName string */
/** @var $authors string[] */
/** @var $githubIssueNumber string */
/** @var $currentDate DateTimeImmutable */
/** @var $tableRootName string */
/** @var $columns array[] */

$columnsString = '';
$count = 0;
foreach ($columns as $column) {
  if ($count > 0) {
    $columnsString .= ', ';
  }
  $columnsString .= $column['COLUMN_NAME'];
  $count++;
}

$getDefinition = function (array $column) {
  if ($column['DATA_TYPE'] === 'CHAR') {
    return "Char(" . $column['LENGTH'] . ")";
  }

  if ($column['DATA_TYPE'] === 'DATE') {
    return "Date";
  }

  if ($column['DATA_TYPE'] === 'DECIMAL') {
    return "Packed(" . $column['LENGTH'] . ':' . $column['NUMERIC_SCALE'] . ")";
  }

  if ($column['DATA_TYPE'] === 'BIGINT') {
    return "Packed(" . $column['LENGTH'] . ':' . $column['NUMERIC_SCALE'] . ")";
  }

  if ($column['DATA_TYPE'] === 'TIMESTMP') {
    return "Timestamp";
  }
};

$getKeyColumns = function (array $columns) {
  $resultColumns = [];
  foreach ($columns as $column) {
    if ($column['IS_IDENTITY'] === 'YES') {
      $resultColumns[] = $column;
    }
  }
  return $resultColumns;
};

$getColumnPrefix = function (array $columns): string
{
  $prefix = explode('_', $columns[0]['COLUMN_NAME']);
  return $prefix[0] . '_';
};

$keyColumns = $getKeyColumns($columns);
?>

**FREE
/TITLE <?= $title . PHP_EOL?>
// ---------------------------------------------------------------------
Ctl-Opt copyright('(C) Copyright 1996 - <?= (new DateTime('now'))->format('Y') ?> King III Solutions, Inc.+
Rel 6.01 2016-01-01   Program Property of King III Solutions, Inc.+
All rights reserved              +
K3S_Replenish (R) is a Registered Trade Mark of King III Solutions+
Inc.');
Ctl-Opt nomain;

// ***************************************************************
//
//   K3S-Replenish (R) - Inventory REPLENISHment System
//   Copyright (C) 1996-2013 by King III Solutions, Inc.
//   Program property of King III Solutions, Inc.
//   All rights reserved.
//   K3S_Replenish (R) is a Registered Trade Mark of
//   King III Solutions Inc.
//
// ***************************************************************
//   Name: <?= $sourceMemberName . PHP_EOL?>
//   Type: SQLRPGLE Program
//   Desc: Web - Update/Delete/Insert into K_<?= $tableRootName . PHP_EOL?>
//   Auth: <?= $authors[0] ?>
<?php if (count($authors) > 1)
{
    foreach ($authors as $author) {
        echo '           ' . $author . PHP_EOL;
    }
}
?>

//
// ****************************************************************
//                                                               *
//   Change ID  Change Date Change Description                   *
//   ---------  ----------  -------------------------------------*
//     <?= $githubIssueNumber ?>    <?= $currentDate->format('Y-m-d') ?>  Initially written.                   *
// ***************************************************************
Dcl-DS <?= $tableRootName ?>  extname('K_<?= $tableRootName ?>') prefix(nw:2) Qualified;
End-DS;

// Prototypes
/COPY 'qrpglesrc/<?= $tableRootName ?>_H.rpgle'

// Global Variables
Dcl-C SQLSTATEOK Const('00000');

exec sql set option commit = *none,
                    datfmt = *iso,
                 closqlcsr = *endactgrp;

// --------------------------------------------------------------------
// Select Record and populate DS
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_getrecord Export;
  Dcl-PI <?= $tableRootName ?>_getrecord Ind;
    <?php foreach ($columns as $column) {
      if ($column['IS_IDENTITY'] === 'YES') {

        //echo str_replace($getColumnPrefix($columns), 'ID', $column['COLUMN_NAME']) . '    ';
        echo str_replace(' ', '', $column['COLUMN_TEXT']) . '     ' . $getDefinition($column) . ';' . PHP_EOL;
      }
    }
  ?>
  End-PI;
  Dcl-S isFound      Ind        inz(*off);

  <?= $tableRootName ?>_clear();

  exec sql
    Select
<?php
$counter = 0;
foreach ($columns as $column) {
  if ($counter > 0) {
    echo ', ' . PHP_EOL;
  }
  echo '      ' . $column['COLUMN_NAME'];
  $counter++;
}
echo PHP_EOL; ?>
    into :<?= $tableRootName . PHP_EOL?>
    from K_<?= $tableRootName . PHP_EOL?>
    Where <?php
      $counter = 0;
      foreach ($keyColumns as $keyColumn) {
        if ($counter > 0) {
          echo PHP_EOL . " AND ";
        }
//        echo $keyColumn['COLUMN_NAME'] . ' = :' . str_replace($getColumnPrefix($columns), 'ID', $keyColumn['COLUMN_NAME']);;
        echo $keyColumn['COLUMN_NAME'] . ' = :' . str_replace(' ', '', $keyColumn['COLUMN_TEXT']) . PHP_EOL;
        $counter++;
      }
      echo PHP_EOL;
    ?>
    fetch first row only
    WITH NC;

  if (SQLState = SQLSTATEOK);
    isFound = *on;
  endif;

  return isFound;
End-Proc;

// --------------------------------------------------------------------
// Clear Data Structure holding Records
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_clear Export;
  Dcl-PI <?= $tableRootName ?>_clear;
  End-PI;

  clear <?= $tableRootName ?>;
  return;
End-Proc;


// =====================================================================
// Getters
// =====================================================================

<?php
foreach ($columns as $column) {
  $columnBaseName = explode('_',$column['COLUMN_NAME'])[1];
?>

// --------------------------------------------------------------------
// Get value from <?= $column['COLUMN_TEXT'] . PHP_EOL ?>
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_get<?= $column['COLUMN_NAME'] ?> export;
  Dcl-PI <?= $tableRootName ?>_get<?= $column['COLUMN_NAME'] ?> <?php
    echo $getDefinition($column);
    echo ";" . PHP_EOL;
?>
  End-PI;

  return <?= $tableRootName ?>.nw_<?= $columnBaseName ?>;
End-Proc;

<?php
}
?>


// =====================================================================
// Setters
// =====================================================================

<?php
foreach ($columns as $column) {
  if ($column['IS_IDENTITY'] === 'YES') {
    continue;
  }
  $columnBaseName = explode('_',$column['COLUMN_NAME'])[1];
?>
// --------------------------------------------------------------------
// Set value for <?= $column['COLUMN_TEXT'] . PHP_EOL ?>
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_set<?= $column['COLUMN_NAME'] ?> export;
  Dcl-PI <?= $tableRootName ?>_set<?= $column['COLUMN_NAME'] ?>;
    Pm<?= $columnBaseName ?>  <?php
    echo $getDefinition($column);
  ?>  const;
  End-PI;

  <?= $tableRootName ?>.nw_<?= $columnBaseName ?> = Pm<?= $columnBaseName ?>;

  return;
End-Proc;

<?php
}
?>


// ====================================================================
// Database functions
// ====================================================================

// --------------------------------------------------------------------
// Update record with values from DS
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_update Export;
  Dcl-PI <?= $tableRootName ?>_update Ind;
<?php foreach ($columns as $column) {
  if ($column['IS_IDENTITY'] === 'YES') {
//    echo '    ' . str_replace($getColumnPrefix($columns), 'ID', $column['COLUMN_NAME']) . '    ';
    echo '    ' . str_replace(' ', '', $column['COLUMN_TEXT']) . '     ' . $getDefinition($column) . ';' . PHP_EOL;
  }
}
?>
  End-PI;
  Dcl-S isUpdated    Ind        inz(*off);

  exec sql
    update K_<?= $tableRootName . PHP_EOL?>
    set <?php
echo PHP_EOL;
$count = 0;
foreach ($columns as $column) {
  if ($column['IS_IDENTITY'] === 'YES') {
    continue;
  }
  if ($count > 0) {
    echo ', ' . PHP_EOL;
  }
  $columnBaseName = explode('_',$column['COLUMN_NAME'])[1];

  echo "      " . $column['COLUMN_NAME'] . ' = :' . $tableRootName . '.nw_' . $columnBaseName;
  $count++;
} ?>

    Where <?php
$counter = 0;
foreach ($keyColumns as $keyColumn) {
  if ($counter > 0) {
    echo PHP_EOL . " AND ";
  }
//  echo $keyColumn['COLUMN_NAME'] . ' = :' . str_replace($getColumnPrefix($columns), 'ID', $keyColumn['COLUMN_NAME']);
  echo $keyColumn['COLUMN_NAME'] . ' = :' . str_replace(' ', '', $keyColumn['COLUMN_TEXT']) . '     ' . PHP_EOL;
  $counter++;
}
echo PHP_EOL;
?>
    WITH NC;

  if (SQLState = SQLSTATEOK);
    isUpdated = *on;
  endif;

  return isUpdated;
End-Proc;

// --------------------------------------------------------------------
// Delete record
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_Delete Export;
  Dcl-PI <?= $tableRootName ?>_Delete Ind;
<?php foreach ($columns as $column) {
  if ($column['IS_IDENTITY'] === 'YES') {
    //echo '    ' . str_replace($getColumnPrefix($columns), 'ID', $column['COLUMN_NAME']) . '    ';
    echo '    ' . str_replace(' ', '', $column['COLUMN_TEXT']) . '     ' . $getDefinition($column) . ';' . PHP_EOL;
  }
}
?>
  End-PI;
  Dcl-S isDeleted    Ind        inz(*off);

  exec sql
    Delete from K_<?= $tableRootName ?>
    Where <?php
$counter = 0;
foreach ($keyColumns as $keyColumn) {
  if ($counter > 0) {
    echo PHP_EOL . " AND ";
  }
  echo $keyColumn['COLUMN_NAME'] . ' = :' . str_replace(' ', '', $keyColumn['COLUMN_TEXT']) . PHP_EOL;
  $counter++;
}
echo PHP_EOL;
?>
    WITH NC;

  if (SQLState = SQLSTATEOK);
    isDeleted = *on;
  endif;

  return isDeleted;
End-Proc;



// --------------------------------------------------------------------
// Insert new record with values from DS
// --------------------------------------------------------------------
Dcl-Proc <?= $tableRootName ?>_insert Export;
  Dcl-PI <?= $tableRootName ?>_insert Ind;
  End-PI;
  Dcl-S isWritten    Ind        inz(*off);

  exec sql
    insert into K_<?= $tableRootName ?>(
<?php
$counter = 0;
foreach ($columns as $column) {
  if ($column['IDENTITY_GENERATION'] === 'ALWAYS') {
    continue;
  }
  if ($counter > 0) {
    echo ", " . PHP_EOL;
  }
  echo "      " . $column['COLUMN_NAME'];
  $counter++;
}
echo PHP_EOL?>
    ) values (
<?php
$count = 0;
foreach ($columns as $column) {
  if ($column['IDENTITY_GENERATION'] === 'ALWAYS') {
    continue;
  }
  if ($count > 0) {
    echo ', ' . PHP_EOL;
  }
  $columnBaseName = explode('_',$column['COLUMN_NAME'])[1];
  echo '      :' . $tableRootName . '.nw_' . $columnBaseName;
  $count++;
}
?>
)
  WITH NC;

  if (SQLState = SQLSTATEOK);
    isWritten = *on;
  endif;

  return isWritten;
End-Proc;
